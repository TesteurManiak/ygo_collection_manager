// Mocks generated by Mockito 5.0.16 from annotations
// in ygo_collection_manager/test/presentation/browse_view/browse_view_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:ygo_collection_manager/domain/entities/card_owned.dart' as _i7;
import 'package:ygo_collection_manager/domain/entities/ygo_card.dart' as _i5;
import 'package:ygo_collection_manager/domain/repository/ygopro_repository.dart'
    as _i2;
import 'package:ygo_collection_manager/domain/usecases/fetch_all_cards.dart'
    as _i3;
import 'package:ygo_collection_manager/domain/usecases/fetch_owned_cards.dart'
    as _i6;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeYgoProRepository_0 extends _i1.Fake implements _i2.YgoProRepository {
}

/// A class which mocks [FetchAllCards].
///
/// See the documentation for Mockito's code generation for more information.
class MockFetchAllCards extends _i1.Mock implements _i3.FetchAllCards {
  MockFetchAllCards() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.YgoProRepository get repository =>
      (super.noSuchMethod(Invocation.getter(#repository),
          returnValue: _FakeYgoProRepository_0()) as _i2.YgoProRepository);
  @override
  _i4.Future<List<_i5.YgoCard>> call({bool? shouldReload}) =>
      (super.noSuchMethod(
              Invocation.method(#call, [], {#shouldReload: shouldReload}),
              returnValue: Future<List<_i5.YgoCard>>.value(<_i5.YgoCard>[]))
          as _i4.Future<List<_i5.YgoCard>>);
  @override
  String toString() => super.toString();
}

/// A class which mocks [FetchOwnedCards].
///
/// See the documentation for Mockito's code generation for more information.
class MockFetchOwnedCards extends _i1.Mock implements _i6.FetchOwnedCards {
  MockFetchOwnedCards() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.YgoProRepository get repository =>
      (super.noSuchMethod(Invocation.getter(#repository),
          returnValue: _FakeYgoProRepository_0()) as _i2.YgoProRepository);
  @override
  _i4.Future<List<_i7.CardOwned>> call() =>
      (super.noSuchMethod(Invocation.method(#call, []),
              returnValue: Future<List<_i7.CardOwned>>.value(<_i7.CardOwned>[]))
          as _i4.Future<List<_i7.CardOwned>>);
  @override
  String toString() => super.toString();
}
