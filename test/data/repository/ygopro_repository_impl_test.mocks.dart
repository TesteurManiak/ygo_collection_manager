// Mocks generated by Mockito 5.0.16 from annotations
// in ygo_collection_manager/test/data/repository/ygopro_repository_impl_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i6;

import 'package:mockito/mockito.dart' as _i1;
import 'package:ygo_collection_manager/core/platform/network_info.dart' as _i15;
import 'package:ygo_collection_manager/data/datasources/local/ygopro_local_datasource.dart'
    as _i10;
import 'package:ygo_collection_manager/data/datasources/remote/ygopro_remote_data_source.dart'
    as _i5;
import 'package:ygo_collection_manager/data/models/request/get_card_info_request.dart'
    as _i9;
import 'package:ygo_collection_manager/data/models/response/archetype_model.dart'
    as _i7;
import 'package:ygo_collection_manager/data/models/response/card_set_info_model.dart'
    as _i2;
import 'package:ygo_collection_manager/data/models/response/db_version_model.dart'
    as _i4;
import 'package:ygo_collection_manager/data/models/response/ygo_card_model.dart'
    as _i3;
import 'package:ygo_collection_manager/data/models/response/ygo_set_model.dart'
    as _i8;
import 'package:ygo_collection_manager/domain/entities/card_owned.dart' as _i14;
import 'package:ygo_collection_manager/domain/entities/db_version.dart' as _i12;
import 'package:ygo_collection_manager/domain/entities/ygo_card.dart' as _i11;
import 'package:ygo_collection_manager/domain/entities/ygo_set.dart' as _i13;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeCardSetInfoModel_0 extends _i1.Fake implements _i2.CardSetInfoModel {
}

class _FakeYgoCardModel_1 extends _i1.Fake implements _i3.YgoCardModel {}

class _FakeDbVersionModel_2 extends _i1.Fake implements _i4.DbVersionModel {}

/// A class which mocks [YgoProRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockYgoProRemoteDataSource extends _i1.Mock
    implements _i5.YgoProRemoteDataSource {
  MockYgoProRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Future<List<_i7.ArchetypeModel>> getAllCardArchetypes() =>
      (super.noSuchMethod(Invocation.method(#getAllCardArchetypes, []),
          returnValue: Future<List<_i7.ArchetypeModel>>.value(
              <_i7.ArchetypeModel>[])) as _i6.Future<List<_i7.ArchetypeModel>>);
  @override
  _i6.Future<List<_i8.YgoSetModel>> getAllSets() => (super.noSuchMethod(
          Invocation.method(#getAllSets, []),
          returnValue: Future<List<_i8.YgoSetModel>>.value(<_i8.YgoSetModel>[]))
      as _i6.Future<List<_i8.YgoSetModel>>);
  @override
  _i6.Future<_i2.CardSetInfoModel> getCardSetInformation(String? setCode) =>
      (super.noSuchMethod(Invocation.method(#getCardSetInformation, [setCode]),
              returnValue:
                  Future<_i2.CardSetInfoModel>.value(_FakeCardSetInfoModel_0()))
          as _i6.Future<_i2.CardSetInfoModel>);
  @override
  _i6.Future<_i3.YgoCardModel> getRandomCard() => (super.noSuchMethod(
          Invocation.method(#getRandomCard, []),
          returnValue: Future<_i3.YgoCardModel>.value(_FakeYgoCardModel_1()))
      as _i6.Future<_i3.YgoCardModel>);
  @override
  _i6.Future<List<_i3.YgoCardModel>> getCardInfo(
          _i9.GetCardInfoRequest? request) =>
      (super.noSuchMethod(Invocation.method(#getCardInfo, [request]),
              returnValue:
                  Future<List<_i3.YgoCardModel>>.value(<_i3.YgoCardModel>[]))
          as _i6.Future<List<_i3.YgoCardModel>>);
  @override
  _i6.Future<_i4.DbVersionModel> checkDatabaseVersion() =>
      (super.noSuchMethod(Invocation.method(#checkDatabaseVersion, []),
              returnValue:
                  Future<_i4.DbVersionModel>.value(_FakeDbVersionModel_2()))
          as _i6.Future<_i4.DbVersionModel>);
  @override
  String toString() => super.toString();
}

/// A class which mocks [YgoProLocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockYgoProLocalDataSource extends _i1.Mock
    implements _i10.YgoProLocalDataSource {
  MockYgoProLocalDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Future<void> initDb() =>
      (super.noSuchMethod(Invocation.method(#initDb, []),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i6.Future<void>);
  @override
  _i6.Future<void> closeDb() =>
      (super.noSuchMethod(Invocation.method(#closeDb, []),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i6.Future<void>);
  @override
  _i6.Future<List<_i11.YgoCard>> getCards() =>
      (super.noSuchMethod(Invocation.method(#getCards, []),
              returnValue: Future<List<_i11.YgoCard>>.value(<_i11.YgoCard>[]))
          as _i6.Future<List<_i11.YgoCard>>);
  @override
  _i6.Future<_i12.DbVersion?> getDatabaseVersion() =>
      (super.noSuchMethod(Invocation.method(#getDatabaseVersion, []),
              returnValue: Future<_i12.DbVersion?>.value())
          as _i6.Future<_i12.DbVersion?>);
  @override
  _i6.Future<List<_i13.YgoSet>> getSets() =>
      (super.noSuchMethod(Invocation.method(#getSets, []),
              returnValue: Future<List<_i13.YgoSet>>.value(<_i13.YgoSet>[]))
          as _i6.Future<List<_i13.YgoSet>>);
  @override
  _i6.Future<void> updateCards(List<_i11.YgoCard>? cards) =>
      (super.noSuchMethod(Invocation.method(#updateCards, [cards]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i6.Future<void>);
  @override
  _i6.Future<void> updateDbVersion(_i12.DbVersion? dbVersion) =>
      (super.noSuchMethod(Invocation.method(#updateDbVersion, [dbVersion]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i6.Future<void>);
  @override
  _i6.Future<void> updateSets(List<_i13.YgoSet>? sets) =>
      (super.noSuchMethod(Invocation.method(#updateSets, [sets]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i6.Future<void>);
  @override
  _i6.Future<List<_i14.CardOwned>> getCardsOwned() => (super.noSuchMethod(
          Invocation.method(#getCardsOwned, []),
          returnValue: Future<List<_i14.CardOwned>>.value(<_i14.CardOwned>[]))
      as _i6.Future<List<_i14.CardOwned>>);
  @override
  _i6.Future<int> getCopiesOfCardOwned(String? key) =>
      (super.noSuchMethod(Invocation.method(#getCopiesOfCardOwned, [key]),
          returnValue: Future<int>.value(0)) as _i6.Future<int>);
  @override
  _i6.Future<int> getCopiesOfCardOwnedById(int? id) =>
      (super.noSuchMethod(Invocation.method(#getCopiesOfCardOwnedById, [id]),
          returnValue: Future<int>.value(0)) as _i6.Future<int>);
  @override
  _i6.Future<void> updateCardOwned(_i14.CardOwned? card) =>
      (super.noSuchMethod(Invocation.method(#updateCardOwned, [card]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i6.Future<void>);
  @override
  _i6.Future<void> removeCard(_i14.CardOwned? card) =>
      (super.noSuchMethod(Invocation.method(#removeCard, [card]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i6.Future<void>);
  @override
  String toString() => super.toString();
}

/// A class which mocks [NetworkInfo].
///
/// See the documentation for Mockito's code generation for more information.
class MockNetworkInfo extends _i1.Mock implements _i15.NetworkInfo {
  MockNetworkInfo() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Future<bool> get isConnected =>
      (super.noSuchMethod(Invocation.getter(#isConnected),
          returnValue: Future<bool>.value(false)) as _i6.Future<bool>);
  @override
  String toString() => super.toString();
}
